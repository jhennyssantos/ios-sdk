# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest
    runs-on: MacOS-latest
    env:
      BUCKET_NAME: teste-release-demo-ios
      AWS_REGION: us-east-1
      HOSTNAME: Mac-1621343049860.local
      
      #  ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      #  SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: AWS Access
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Ansible
        run: brew install ansible

      # - name: Set variable hostname
      #   id: step_one
      #   run: |
      #     echo 'JSON_RESPONSE<<EOF' >> $GITHUB_ENV
      #     hostname -f >> $GITHUB_ENV
      #     echo 'EOF' >> $GITHUB_ENV

      - name: echo HOSTNAME
        run: echo ${{ env.HOSTNAME }}

      # - name: Set selected color
      #   run: echo '::set-output name=SELECTED_COLOR::green'
      #   id: random-color-generator
      #
      # - name: Get color
      #   run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"

      - name: Run Ansible
        run: ansible-playbook ./deployment/playbooks/deploy.yml
        # run: ansible-playbook ./deployment/playbooks/deploy.yml --extra-vars variable_host=${{ steps.step_one.outputs.GITHUB_ENV }}
        # run: ansible-playbook ./deployment/playbooks/deploy.yml --extra-vars variable_host=${{ env.HOSTNAME }}