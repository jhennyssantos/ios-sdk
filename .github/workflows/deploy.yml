# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest
    runs-on: MacOS-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      # Xcode    
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_11.3.app
        
      - name: Xcode version
        run: /usr/bin/xcodebuild -version
        
      # Device slice
      # - name: Build Archive
      #   run: |
      #     xcodebuild -sdk iphoneos -project CocoaHeadsNL/CocoaHeadsNL.xcodeproj \
      #     -configuration Release -scheme CocoaHeadsNL \
      #     -derivedDataPath DerivedData \
      #     -archivePath DerivedData/Archive/CocoaHeadsNL archive
      - name: Build Archive 2
        run: |
          xcodebuild archive -project EMVConnectiOS.xcodeproj \
          -scheme EMVConnectiOS -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/EMVConnectiOS.framework-iphoneos.xcarchive SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES

      - name: Simulator slice
        run: |
          xcodebuild archive -project EMVConnectiOS.xcodeproj \
          -scheme EMVConnectiOS -configuration Release \
          -destination 'generic/platform=iOS Simulator' \
          -archivePath build/EMVConnectiOS.framework-iphonesimulator.xcarchive SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES

      - name: Mac Catalyst slice
        run: |
          xcodebuild archive -project EMVConnectiOS.xcodeproj \
          -scheme EMVConnectiOS -configuration Release \
          -destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst' \
          -archivePath build/EMVConnectiOS.framework-catalyst.xcarchive SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES

      - name: Iphone Simulator
        run: |
          xcodebuild build -project EMVConnectiOS.xcodeproj \
          -target EMVConnectiOS -sdk iphonesimulator SYMROOT=build
